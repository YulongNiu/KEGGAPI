% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/getSeq.R
\name{getKEGGGeneSeq}
\alias{doTen}
\alias{getKEGGGeneSeq}
\title{Get protein and gene sequences}
\usage{
getKEGGGeneSeq(KEGGGeneIDs, seqType = "aaseq", enforceURL = FALSE, n = 1)

doTen(tenWebSeq, seqType)
}
\arguments{
\item{KEGGGeneIDs}{A vector of KEGG IDs. Seqences from different species could be combined together.}

\item{seqType}{Choose nucleotide acid (ntseq) or amino acid (aaseq) seqences, and the default is amino acid sequences.}

\item{enforceURL}{whether to enfoce get get url until the results returned. The default value is "FALSE".}

\item{n}{The number of CPUs or processors, and the default value is 1.}

\item{tenWebSeq}{return results from function getURL()}
}
\value{
A BStringSet.

BStingSet or NULL (for the case one gene has no cording protein sequence)
}
\description{
KEGG Database API - Get the nucleotide acid and amino acid sequences
}
\details{
Get protein and gene sequences in fasta format. This function supports mutiple querys.
}
\examples{
## two amino acid seqences from different sepecies with 2 threads.
twoAASeqs <- getKEGGGeneSeq(c('mja:MJ_0011', 'hsa:10458'), n = 2)
\dontrun{
## export fasta format files
require('Biostrings')
writeXStringSet(twoAASeqs, 'twoAASeqs.fasta')}

\dontrun{
## more examples
twoNTSeqs <- getKEGGGeneSeq(c('shy:SHJG_7159', 'shy:SHJG_7160'), 'ntseq')
mutilAASeqs <- getKEGGGeneSeq(c('eco:b0202', 'eco:b0203', 'eco:b0204',
'eco:b0205', 'eco:b0206', 'eco:b0216', 'eco:b0244',
'eco:b4626', 'eco:b3796', 'eco:b3797', 'eco:b3296',
'eco:b3297'))}

\dontrun{
## get the whole E.coli genome protein seqences
ecoProIDs <- getProID('eco')
ecoGenomePro <- getKEGGGeneSeq(ecoProIDs[, 1])}
}
\author{
Yulong Niu \email{niuylscu@gmail.com}

Yulong Niu \email{niuylscu@gmail.com}
}
\references{
\url{http://www.kegg.jp/kegg/rest/keggapi.html}
}
\seealso{
getKEGGTIDGeneSeq
}
\keyword{internal}

